나 이외의 사람들을 위해 만든 도전과제

=========================================<1차 도전과제>=========================================
계좌 클래스를 만들어서 계좌를 생성해본다. 계좌에는 입금, 출금 기능만을 가진다. 송금은 1차에서 구현하지 않는다.

계좌에 필요한 대략적인 최소 계좌주 정보는 다음과 같다.
(1) 계좌주 이름
(2) 은행이름
(3) 계좌번호
(4) 출금 비밀번호
(5) 계좌종류 이름
(6) 잔금정보 (실수타입)

[계좌번호 관련]
계좌번호는 일반적으로 14자리이며 012-012345678-01의 형식으로 세 부분으로 나뉜다.

첫번째 파트는 계좌개설 지점의 번호이다. 하지만 우리는 계좌개설의 지점이 어떤 번호로 지정했는지까지 세세한 부분을 모르므로
1: Seoul / 2: Gyeonggi / 3: Incheon / 3: ChungCheong / 4: Gangwon / 5: Jeonra / 6: Gyeongsang / 7: Jeju 로 지역에 따라 지정한다. 
개설자가 충청도에 산다고 입력했으면 첫번째 파트의 번호는 003이 된다.

세번째 파트는 계좌상품의 종류를 의미한다. 하지만 우리는 은행원이 아니니 그런 세세한 것은 모른다. 따라서 다음과 같이 경우의 수를 제한한다.
1을 입력 --> 계좌종류: 일반 입출금계좌, 계좌 세번째 파트 번호 01
2를 입력 --> 계좌종류: 연간 적금계좌, 계좌 세번째 파트 번호 02

[계좌상품에 따른 이자관련]
계좌상품 종류에 따른 이자처리 부분은 아직 구현하지 않는다.

[출금 비밀번호 관련]
출금 비밀번호는 일반적으로 4자리수로 구성한다. 하지만 따로 제약을 두지 않아도 된다.

[입/출금 관련]
입출금은 해당 계좌번호를 고르고 입/출금 프로세스를 진행해야한다.

입금의 경우 간단하다. 그냥 하면 된다.

출금의 경우 비밀번호를 체크해야 한다. 비밀번호가 3번 이상 틀릴 경우 출금 기능을 막는 기능을 구현해야 한다. 그후 잔고보다 큰 금액을 요구하면 다시 요구출금액을 입력하게 하고 그렇지 않으면 출금기능을 수행한다.

[잔금 조회기능]
그냥 잔금을 조회하면 된다.


=========================================<2차 도전과제>=========================================
A계좌에서 B계좌로 송금 기능을 구현한다. 다른 은행에 따른 수수료는 고려하지 않는다.


=========================================<3차 도전과제>=========================================
다른 은행일 경우 송금액에 따른 수수료를 구현한다.

30만원 이하의 경우 수수료를 일괄 400원을 적용한다.
30만원 초과 150만원 이하의 경우 일괄 수수료 1500원을 적용한다.
150만원 초과의 경우 일괄 수수료 2000원을 적용한다.

=========================================<5차 도전과제>=========================================
이때까지 한 과정은 콘솔 구동을 종료하면 모두 사라진다. 따라서 외부기억장치에 저장하여 종료하여도 데이터들이 보존되도록 해야한다.
그리고 다시 프로그램을 키면 이전 데이터들이 다시 복구되도록 해야한다. 이 기능을 구현하라.


=========================================<6차 도전과제>=========================================
연이자 기능을 구현하라. (여기는 이 문제를 만든 본인도 못하는 기능)