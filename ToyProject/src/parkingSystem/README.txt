전체적인 흐름은 CustomerMain 클래스에서 작동한다.

1을 입력하면 예약
2를 임력하면 번호검색을 통한 특정 예약자 검색
3을 임력하면 전체 예약자를 검색
4를 입력하면 프로그램을 종료한다.

그 외에 숫자를 입력할 경우 다시 입력할 것을 요구한다.

예약과정은 다음과 같다
(1) 이름입력
(2) 차번호 입력
(3) 휴대폰 번호 입력
(4) 예약 시작일 입력
(5) 예약 종료일 입력
(6) 주차위치 지정

시작일과 종료일의 입력방식은 2020년 10월 2일이라면, 2020-10-02로 한다. 시작일과 종료일을 입력하였다면 시작일과 종료일 범위 내에서의 주차 가능여부를 도표로 출력해준다(주차장의 층수는 1~4층 주차공간은 1~100이다). 시작일과 종료일의 값이 Mapping 객체로 넘어가고 Mapping 객체 안에 각 주차공간의 스케줄에 해당하는 Scheduler 객체에게 다시 넘겨 주차가 가능한 공간은 □로 주차가 불가능한 공간은 ■로 보여준다.

주차공간의 입력방식은 '층수-주차공간번호'이며 예를들어 3층의 30번 주차공간에 예약하고 싶다면 3-30을 입력하면 된다. 주차공간을 지정하면 그 주차공간에 해당하는 Scheduler 객체가 주차가능 여부를 판단한다. 주차가 가능하다면 스케줄을 배정하고 그렇지 않다면 다른 공간을 선택해야 하므로 주차공간 변수를 Scanner 객체를 통해 받고 반복한다.

이렇게 예약 가능한 인원은 총 1만명이다.

그외의 검색기능이나 프로그램 종료 기능은 직관적이므로 따로 설명을 붙이지 않는다.

[미처 구현하지 못한 기능]
(1) 주차 불가능한 공간을 입력하여 다시 위치를 입력 받은 경우 Customer 멤버 변수의 값을 수정된 값으로 고쳐줘야 하는데 아직 추가하지 아니함. Customer 객체에 setPlace(String place)를 만든다면 곧바로 구현 가능하나 생략함. 
(2) 프로그램 종료시 현재까지의 예약 현황을 외부파일로 저장하고 불러오는 기능을 구현하지 아니함. file 객체와 bufferwriter, bufferreader객체를 이용하여 메소드를 몇가지 추가한다면 가능할 듯 싶지만 코드가 상당히 길어지므로 생략함.
